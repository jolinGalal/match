openapi: 3.0.3
info:
  title: match API
  description: Match Application API, You can read and test  the APIs from this documentation
  version: "1.0"
servers:
- url: http://localhost:80
  description: Default server for match
paths:
  /user/v1:
    get:
      tags:
      - users
      summary: list users
      description: list users
      operationId: users#list
      parameters:
      - name: sort_direction
        in: query
        allowEmptyValue: true
        schema:
          type: string
          default: desc
          example: desc
          enum:
          - asc
          - desc
        example: asc
      - name: sort_key
        in: query
        allowEmptyValue: true
        schema:
          type: string
          default: CreatedAt
          example: CreatedAt
          enum:
          - CreatedAt
          - UserID
          - UserName
        example: UserID
      - name: page_number
        in: query
        allowEmptyValue: true
        schema:
          type: integer
          default: 1
          example: 604421423767735303
          format: int64
        example: 2500654243191843258
      - name: page_size
        in: query
        allowEmptyValue: true
        schema:
          type: integer
          default: 20
          example: 5295046101546040041
          format: int64
        example: 8817632685639033512
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseBody'
              example:
                pagination:
                  current_page: 1
                  page_size: 3
                  total_count: 33
                  total_pages: 11
                users:
                - UserDeposit: 3422465877840954461
                  UserID: Dicta est cum laborum maxime dicta aliquam.
                  UserName: Rerum eius ipsam repudiandae sed ullam doloremque.
                  UserRole: Omnis esse vitae dolores explicabo ratione.
                - UserDeposit: 3422465877840954461
                  UserID: Dicta est cum laborum maxime dicta aliquam.
                  UserName: Rerum eius ipsam repudiandae sed ullam doloremque.
                  UserRole: Omnis esse vitae dolores explicabo ratione.
                - UserDeposit: 3422465877840954461
                  UserID: Dicta est cum laborum maxime dicta aliquam.
                  UserName: Rerum eius ipsam repudiandae sed ullam doloremque.
                  UserRole: Omnis esse vitae dolores explicabo ratione.
                - UserDeposit: 3422465877840954461
                  UserID: Dicta est cum laborum maxime dicta aliquam.
                  UserName: Rerum eius ipsam repudiandae sed ullam doloremque.
                  UserRole: Omnis esse vitae dolores explicabo ratione.
        "401":
          description: Unauthorized response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
      security:
      - jwt_header_Authorization:
        - list-users
        - update-user
        - delete-user
    post:
      tags:
      - users
      summary: create users
      description: Create new user
      operationId: users#create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestBody'
            example:
              user:
                UserName: Est sed in.
                UserPassword: Voluptates ut provident in eos sit quo.
                UserRole: seller
      responses:
        "200":
          description: OK response.
        "406":
          description: Not Acceptable response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /user/v1/{id}:
    delete:
      tags:
      - users
      summary: delete users
      description: delete existing user
      operationId: users#delete
      parameters:
      - name: id
        in: path
        description: the user id to be updated
        required: true
        schema:
          type: integer
          description: the user id to be updated
          example: 2898265748811559420
          format: int64
        example: 239488892723362355
      responses:
        "200":
          description: OK response.
        "404":
          description: Not Found response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
      security:
      - jwt_header_Authorization:
        - list-users
        - update-user
        - delete-user
    put:
      tags:
      - users
      summary: update users
      description: update existing user
      operationId: users#update
      parameters:
      - name: id
        in: path
        description: the user id to be updated
        required: true
        schema:
          type: integer
          description: the user id to be updated
          example: 4819872629041364309
          format: int64
        example: 2348485399676782981
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestBody'
            example:
              user:
                UserName: Est sed in.
                UserPassword: Voluptates ut provident in eos sit quo.
                UserRole: seller
      responses:
        "200":
          description: OK response.
        "404":
          description: Not Found response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
        "406":
          description: Not Acceptable response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
      security:
      - jwt_header_Authorization:
        - list-users
        - update-user
        - delete-user
  /user/v1/login:
    post:
      tags:
      - users
      summary: login users
      description: delete existing user
      operationId: users#login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestBody'
            example:
              USerPassword: Expedita qui velit eveniet atque.
              UserName: Quia rem debitis corporis esse.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginRes'
              example:
                id: 8627054676321310645
                token: Laudantium animi aliquid id ut eveniet nemo.
        "404":
          description: Not Found response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /user/v1/swagger/swagger.json:
    get:
      tags:
      - swagger
      summary: Download gen/http/openapi.json
      description: JSON document containing the API swagger definition
      operationId: swagger#/user/v1/swagger/swagger.json
      responses:
        "200":
          description: File downloaded
components:
  schemas:
    CreateRequestBody:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserPayload'
      example:
        user:
          UserName: Est sed in.
          UserPassword: Voluptates ut provident in eos sit quo.
          UserRole: seller
      required:
      - user
    Error:
      type: object
      properties:
        fault:
          type: boolean
          description: Is the error a server-side fault?
          example: true
        id:
          type: string
          description: ID is a unique identifier for this particular occurrence of
            the problem.
          example: 123abc
        message:
          type: string
          description: Message is a human-readable explanation specific to this occurrence
            of the problem.
          example: parameter 'p' must be an integer
        name:
          type: string
          description: Name is the name of this class of errors.
          example: bad_request
        temporary:
          type: boolean
          description: Is the error temporary?
          example: true
        timeout:
          type: boolean
          description: Is the error a timeout?
          example: false
      description: the error returned when token is invalid
      example:
        id: 3F1FKVRR
        message: Value of ID must be an integer
        name: bad_request
      required:
      - name
      - id
      - message
      - temporary
      - timeout
      - fault
    ListResponseBody:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        users:
          type: array
          items:
            $ref: '#/components/schemas/ListUserResp'
          description: events
          example:
          - UserDeposit: 3422465877840954461
            UserID: Dicta est cum laborum maxime dicta aliquam.
            UserName: Rerum eius ipsam repudiandae sed ullam doloremque.
            UserRole: Omnis esse vitae dolores explicabo ratione.
          - UserDeposit: 3422465877840954461
            UserID: Dicta est cum laborum maxime dicta aliquam.
            UserName: Rerum eius ipsam repudiandae sed ullam doloremque.
            UserRole: Omnis esse vitae dolores explicabo ratione.
          - UserDeposit: 3422465877840954461
            UserID: Dicta est cum laborum maxime dicta aliquam.
            UserName: Rerum eius ipsam repudiandae sed ullam doloremque.
            UserRole: Omnis esse vitae dolores explicabo ratione.
          - UserDeposit: 3422465877840954461
            UserID: Dicta est cum laborum maxime dicta aliquam.
            UserName: Rerum eius ipsam repudiandae sed ullam doloremque.
            UserRole: Omnis esse vitae dolores explicabo ratione.
      example:
        pagination:
          current_page: 1
          page_size: 3
          total_count: 33
          total_pages: 11
        users:
        - UserDeposit: 3422465877840954461
          UserID: Dicta est cum laborum maxime dicta aliquam.
          UserName: Rerum eius ipsam repudiandae sed ullam doloremque.
          UserRole: Omnis esse vitae dolores explicabo ratione.
        - UserDeposit: 3422465877840954461
          UserID: Dicta est cum laborum maxime dicta aliquam.
          UserName: Rerum eius ipsam repudiandae sed ullam doloremque.
          UserRole: Omnis esse vitae dolores explicabo ratione.
        - UserDeposit: 3422465877840954461
          UserID: Dicta est cum laborum maxime dicta aliquam.
          UserName: Rerum eius ipsam repudiandae sed ullam doloremque.
          UserRole: Omnis esse vitae dolores explicabo ratione.
      required:
      - users
      - pagination
    ListUserResp:
      type: object
      properties:
        UserDeposit:
          type: integer
          description: user name
          example: 5967382736638977598
          format: int64
        UserID:
          type: string
          description: user Id
          example: Excepturi fugiat id.
        UserName:
          type: string
          description: user name
          example: Animi repudiandae.
        UserRole:
          type: string
          description: user role
          example: Voluptatem quaerat.
      example:
        UserDeposit: 2957643873592652975
        UserID: Distinctio illum beatae officiis mollitia tempora omnis.
        UserName: Doloremque quis eligendi cum natus impedit vero.
        UserRole: Est voluptatem sequi cumque et molestiae.
      required:
      - UserID
      - UserName
      - UserDeposit
      - UserRole
    LoginRequestBody:
      type: object
      properties:
        USerPassword:
          type: string
          description: user password
          example: Ut et vel voluptas.
        UserName:
          type: string
          description: user name
          example: Molestiae culpa saepe et aut sit et.
      example:
        USerPassword: Quaerat cumque reprehenderit eaque.
        UserName: Id occaecati aliquid et cumque.
      required:
      - UserName
      - USerPassword
    LoginRes:
      type: object
      properties:
        id:
          type: integer
          description: user ID
          example: 7021129730680807740
          format: int64
        token:
          type: string
          description: user token
          example: Voluptate dolor iusto.
      example:
        id: 3445717813177185842
        token: Molestiae eius occaecati sapiente rerum numquam.
      required:
      - token
      - id
    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          description: The current page
          example: 1
          format: int64
        page_size:
          type: integer
          description: 'Max number of records per page '
          example: 3
          format: int64
        total_count:
          type: integer
          description: Total records count
          example: 33
          format: int64
        total_pages:
          type: integer
          description: Total pages
          example: 11
          format: int64
      example:
        current_page: 1
        page_size: 3
        total_count: 33
        total_pages: 11
    UserPayload:
      type: object
      properties:
        UserName:
          type: string
          description: user name
          example: Repudiandae quisquam.
        UserPassword:
          type: string
          description: user passowrd
          example: Sapiente quia ipsa.
        UserRole:
          type: string
          example: seller
          enum:
          - seller
          - buyer
      example:
        UserName: Debitis ut.
        UserPassword: Autem minima magni ea qui.
        UserRole: buyer
      required:
      - UserName
      - UserPassword
      - UserRole
  securitySchemes:
    jwt_header_Authorization:
      type: http
      description: Secures endpoint by requiring a valid JWT token retrieved via the
        signin endpoint.".
      scheme: bearer
tags:
- name: swagger
  description: The swagger service serves the API swagger definition.
- name: users
  description: The events service exposes endpoints that require valid jwt token.
