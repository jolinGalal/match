// Code generated by goa v3.5.2, DO NOT EDIT.
//
// purchases client
//
// Command:
// $ goa gen github.com/jolinGalal/match/internal/purchase/design

package purchases

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "purchases" service client.
type Client struct {
	DepositEndpoint goa.Endpoint
	BuyEndpoint     goa.Endpoint
	ResetEndpoint   goa.Endpoint
}

// NewClient initializes a "purchases" service client given the endpoints.
func NewClient(deposit, buy, reset goa.Endpoint) *Client {
	return &Client{
		DepositEndpoint: deposit,
		BuyEndpoint:     buy,
		ResetEndpoint:   reset,
	}
}

// Deposit calls the "deposit" endpoint of the "purchases" service.
func (c *Client) Deposit(ctx context.Context, p *DepositPayload) (err error) {
	_, err = c.DepositEndpoint(ctx, p)
	return
}

// Buy calls the "buy" endpoint of the "purchases" service.
func (c *Client) Buy(ctx context.Context, p *BuyPayload) (res *PurchesList, err error) {
	var ires interface{}
	ires, err = c.BuyEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*PurchesList), nil
}

// Reset calls the "reset" endpoint of the "purchases" service.
func (c *Client) Reset(ctx context.Context, p *ResetPayload) (err error) {
	_, err = c.ResetEndpoint(ctx, p)
	return
}
